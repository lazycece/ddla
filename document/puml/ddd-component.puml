@startuml ddd-component
cloud "App Modules" {
    [Web] <<app>>
    [Mobile] <<app>>
    [Gateway] <<app>>
    [InnerApp] <<app>>
    Web -down-> Gateway
    Mobile -down-> Gateway
}
package "Client Modules" {
    component XxxClient <<client>>
    package "Facade" {
        component XxxFacade <<facade>>
        note right of XxxFacade: service api
    }
    XxxClient -left-|> XxxFacade: integration
}
package "Adapter" {
    component XxxController <<adapter>>
    component MobileAdapter <<adapter>>
}
node "Application Kernel"{
    package "Application" {
        component XxxFacadeImpl <<application>>
        note left of XxxFacadeImpl
        application logic process,
        may public rpc service
        end note
        component XxxConverter <<application>>
        component XxxValidator <<application>>
    }
    package "Domain" {
        component Model <<domain>>
        component Event <<domain>>
        component Factory <<domain>>
        component Repository <<domain>>
        component DomainService <<domain>>
        note right of DomainService: domain business logic process
    }
    package "Infrastructure" {
        component InfrastructureService <<infra>>
        note right of InfrastructureService
            cache, index, dal, integration, producer, email, ...
        end note
        component DomainImpl<<infra>>
    }
}

skinparam component {
    borderColor orange
    ' backgroundColor gold
    backgroundColor<<app>> PaleGoldenRod
    backgroundColor<<client>> LightGreen
    ' backgroundColor<<adapter>> LightGreen
    ' backgroundColor<<facade>> LightGreen
    backgroundColor<<application>> LightBlue
    backgroundColor<<domain>> Gold
    backgroundColor<<infra>> DarkKhaki
    ' backgroundColor<<bootstrap>> GreenYellow
}

InnerApp -> XxxClient: invoke
InnerApp .[#OrangeRed].> XxxController: http

XxxClient .[#OrangeRed].> XxxController: http
XxxClient .[#OrangeRed].> XxxFacadeImpl: rpc

Gateway .[#OrangeRed].> XxxController: http
Gateway .[#OrangeRed].> MobileAdapter: http

XxxController -down-> XxxFacadeImpl: invoke
MobileAdapter -down-> XxxFacadeImpl: invoke

XxxFacadeImpl -[#Blue]> XxxValidator
XxxFacadeImpl -[#Blue]> XxxConverter
XxxFacadeImpl ..|> XxxFacade: implement
XxxFacadeImpl -down-> Model
XxxFacadeImpl -down-> Event
XxxFacadeImpl -down-> Repository
XxxFacadeImpl -down-> DomainService
XxxFacadeImpl -down-> InfrastructureService

DomainService -[#Blue]> Model
DomainService -[#Blue]> Repository
DomainService -[#Blue]> Factory
DomainService <-[#Blue]-> Event
Event -[#Blue]> Model
Event -[#Blue]> Repository
Event -[#Blue]> Factory
Factory -[#Blue]> Model
Repository -[#Blue]> Model
Repository -[#Blue]> Factory

DomainImpl .up.|> Event: implement
DomainImpl .up.|> Repository: implement
DomainImpl .up.|> Factory: implement
DomainImpl .up.|> DomainService: implement
DomainImpl -right-> InfrastructureService: use
@enduml